[{"C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\index.js":"1","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\App.js":"2","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\HomeScreen.js":"3","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\WelcomeInfo.js":"4","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\SingleInference.js":"5","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\MultiInference.js":"6","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\SelectMode.js":"7"},{"size":825,"mtime":1610004794644,"results":"8","hashOfConfig":"9"},{"size":180,"mtime":1610004794586,"results":"10","hashOfConfig":"9"},{"size":2440,"mtime":1610012124650,"results":"11","hashOfConfig":"9"},{"size":640,"mtime":1610004794588,"results":"12","hashOfConfig":"9"},{"size":8229,"mtime":1610004794588,"results":"13","hashOfConfig":"9"},{"size":1094,"mtime":1610004794587,"results":"14","hashOfConfig":"9"},{"size":3634,"mtime":1610004794587,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pw9irt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\index.js",[],["33","34"],"C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\App.js",[],"C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\HomeScreen.js",[],"C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\WelcomeInfo.js",[],"C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\SingleInference.js",["35","36","37","38","39"],"import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport $ from 'jquery';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    wrapper: {\r\n      margin: theme.spacing(1),\r\n      position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n      color: 'black',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginTop: -12,\r\n      marginLeft: -12,\r\n    },\r\n  }));\r\n\r\nconst styles = {    \r\n    fullWrapper: {\r\n        height:\"100vh\"\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    contentText: {\r\n        paddingLeft: \"13px\",\r\n        paddingRight:\"13px\",\r\n        paddingBottom:\"5px\"\r\n    },\r\n    backdrop: {\r\n        zIndex: 8,\r\n        color: '#fff',\r\n    },\r\n}\r\n\r\nexport default function SingleInference() {\r\n    const classes = useStyles();\r\n    \r\n    const [num1, setNum1] = React.useState(-1);\r\n    const [num2, setNum2] = React.useState(-1);\r\n    const [op, setOp] = React.useState(\"\");\r\n    const [result, setResult] = React.useState(\"no\");\r\n    \r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const handleFileSelect = (evt) =>  {\r\n        var f = evt.target.files[0]; // FileList object\r\n        var reader = new FileReader();\r\n        // Closure to capture the file information.\r\n        reader.onload = (function(theFile) {\r\n            return function(e) {\r\n            var binaryData = e.target.result;\r\n            //Converting Binary Data to base 64\r\n            var base64String = window.btoa(binaryData);\r\n            //showing file converted to base64\r\n            $.ajax({\r\n                url: \"https://api.mathwriting.ml/classify\",\r\n                type: 'POST',\r\n                crossDomain: true,\r\n                data: JSON.stringify({\r\n                    \"imgData\":base64String\r\n                }),\r\n                headers: {\r\n                    \"X-Api-Key\": 'P3nncuYK1P2HJGRa8RtA35cRB2l1K20j2aDQqY8S'\r\n                },\r\n                dataType: 'json',\r\n                contentType: \"application/json\",\r\n                success: function (data) {  \r\n                    setLoading(false);\r\n                    console.info(data);\r\n                    document.getElementById('base64').innerHTML = \"\";\r\n                    setNum1(data['num1']);\r\n                    setNum2(data['num2']);\r\n                    var ans;\r\n                    if (data['op'] === \"0\"){\r\n                        setOp(\"+\");\r\n                        ans = Number(data['num1']) + Number(data['num2']);\r\n                    }\r\n                    else if (data['op'] === \"1\"){\r\n                        setOp(\"-\");\r\n                        ans = Number(data['num1']) - Number(data['num2']);\r\n                    }\r\n                    else if (data['op'] === \"2\"){\r\n                        setOp(\"x\");\r\n                        ans = Number(data['num1']) * Number(data['num2']);\r\n                    }\r\n                    else if (data['op'] === \"3\"){\r\n                        setOp(\"รท\");\r\n                        ans = Number(data['num1']) / Number(data['num2']);\r\n                    }\r\n                    setResult(ans);\r\n\r\n                },\r\n                error: function(jqXHR, exception){\r\n                    document.getElementById('base64').innerHTML = \"FAILED :(\";\r\n                    setLoading(false);\r\n                }\r\n            });\r\n            //document.getElementById('base64').innerHTML = \"loading...\"; \r\n            setLoading(true);\r\n            };\r\n        })(f);\r\n        // Read in the image file as a data URL.\r\n        reader.readAsBinaryString(f);\r\n        }\r\n\r\n    return (\r\n        <div>            \r\n            <Paper square={true} elevation={0}>\r\n                <Grid container direction=\"column\" item align=\"center\">\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    display=\"flex\"\r\n                    justify=\"center\"\r\n                    style={styles.fullWrapper}\r\n                >\r\n                    <Container maxWidth=\"sm\" align=\"center\">\r\n                        <div>\r\n                            <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: 'none' }}\r\n                            id=\"raised-button-file\"\r\n                            type=\"file\"\r\n                            onChange={handleFileSelect}\r\n                            />\r\n                            <label htmlFor=\"raised-button-file\">\r\n                                <div className={classes.wrapper}>\r\n                                    <Button variant=\"contained\" component=\"span\" color=\"primary\" disabled={loading}>\r\n                                        Upload\r\n                                    </Button>\r\n                                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                                </div>\r\n                            </label> \r\n                            \r\n                            <h1 id=\"base64\"></h1>\r\n                            <Grid container\r\n                                dircetion=\"row\" \r\n                                style={styles.root} \r\n                                spacing={2}\r\n                                justify=\"center\"\r\n                                alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <Collapse in={num1 !== -1} mountOnEnter unmountOnExit>\r\n                                        <Paper elevation={3}>\r\n                                            <Typography variant=\"subtitle1\" style={styles.contentText}>{num1}</Typography>\r\n                                        </Paper>\r\n                                    </Collapse>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Collapse in={op !== \"\"} mountOnEnter unmountOnExit>\r\n                                        <Paper elevation={3}>\r\n                                                <Typography variant=\"subtitle1\" style={styles.contentText}>{op}</Typography>\r\n                                        </Paper>\r\n                                    </Collapse>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Collapse in={num2 !== -1} mountOnEnter unmountOnExit>\r\n                                        <Paper elevation={3}>\r\n                                                <Typography variant=\"subtitle1\" style={styles.contentText}>{num2}</Typography>\r\n                                        </Paper>\r\n                                    </Collapse>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <Grid container\r\n                                dircetion=\"row\" \r\n                                style={styles.root} \r\n                                spacing={2}\r\n                                justify=\"center\"\r\n                                alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <Collapse in={result !== \"no\"} mountOnEnter unmountOnExit>\r\n                                        <Typography variant=\"h2\" style={styles.contentText}>={result}</Typography>\r\n                                    </Collapse>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                </Grid>\r\n            </Paper> \r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\MultiInference.js",["40"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport $ from 'jquery';\r\n\r\nconst styles = {    \r\n    fullWrapper: {\r\n        height:\"100vh\"\r\n    },\r\n}\r\n\r\nexport default function MultiInference() {\r\n    return (\r\n        <div>            \r\n            <Paper>\r\n                <Grid container direction=\"column\" item align=\"center\">\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    display=\"flex\"\r\n                    justify=\"center\"\r\n                    style={styles.fullWrapper}\r\n                >\r\n                    <Container maxWidth=\"sm\" align=\"center\">\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            MULTI INFERENCEEEEEEE\r\n                        </Button>\r\n                    </Container>\r\n                </Grid>\r\n                </Grid>\r\n            </Paper>  \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\yonge\\Desktop\\projects\\SCSECC\\SCSECCreact\\src\\SelectMode.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":10,"column":8,"nodeType":"47","messageId":"48","endLine":10,"endColumn":12},{"ruleId":"45","severity":1,"message":"51","line":11,"column":8,"nodeType":"47","messageId":"48","endLine":11,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":154,"column":29,"nodeType":"54","endLine":154,"endColumn":45},{"ruleId":"45","severity":1,"message":"55","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":9},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Backdrop' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'$' is defined but never used.","no-global-assign","no-unsafe-negation"]